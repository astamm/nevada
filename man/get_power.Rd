% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{get_power}
\alias{get_power}
\title{Power Simulations for Permutation Tests}
\usage{
get_power(scenario = "0", n_pop = 4L, representation = "adjacency",
  distance = "frobenius", statistic = "mod", alpha = 0.05, R = 1000L,
  seed = NULL)
}
\arguments{
\item{scenario}{A character specifying the scenario to be simulated (choices
are: "0" [default], "A", "B", "C", "D" or "E").}

\item{n_pop}{The sample size of each population (the same is used for both
populations, default: 4L)}

\item{representation}{The chosen network representation as a string (choices
are: "adjacency" [default], "laplacian" or "modularity").}

\item{distance}{The chosen distance between networks as a string (choices
are: "hamming", "frobenius" [default], "spectral" or "root-euclidean").}

\item{statistic}{The chosen test statistic as a string (choices are: "mod"
[default], "sdom" or "dom").}

\item{alpha}{The significance level of the test (default: 5\%).}

\item{R}{The number of Monte-Carlo runs used to estimate the power (default:
1000L).}

\item{seed}{An integer specifying the seed to start randomness from (default:
uses clock).}
}
\value{
A vector \code{p} of \code{R} p-values, one for each Monte-Carlo run.
  The power can then be estimated as \code{mean(p <= alpha)}.
}
\description{
This function provides a Monte-Carlo estimate of the power of the permutation
tests proposed in this package.
}
\details{
Currently, six scenarios of pairs of populations are implemented. Scenario 0
allows to make sure that all our permutation tests are exact.
}
\examples{
alpha <- 0.05
p <- get_power(alpha = 0.05)
mean(p <= alpha)
}
